#!groovy

/**
 * Jenkinsfile for OSSEC Wazuh
 * Copyright (C) 2016 Wazuh Inc.
 * June 22, 2016.
 *
 * This program is a free software; you can redistribute it
 * and/or modify it under the terms of the GNU General Public
 * License (version 2) as published by the FSF - Free Software
 * Foundation.   
 */
 
def platforms = ['ubuntu', 'debian',  'centos']
def platform_ubuntu = ['ubuntu-xenial-slave', 'ubuntu-trusty-slave', 'ubuntu-precise-slave']
def platform_debian = ['debian-8-slave', 'debian-7-slave']
def platform_centos = ['centos-7-slave', 'centos-6-slave', 'centos-5-slave']

//Stage checkout source
def check_source(label){
    checkout scm
}

//Stage unit tests
def unit_tests(label){
    dir('src'){
        sh 'sudo make --warn-undefined-variables test_valgrind'
        sh 'sudo make clean'
    }
}

//Stage standard ossec compilations
def  standard_compilations(label){
    dir ('src') {
        sh 'sudo make --warn-undefined-variables V=1 TARGET=agent install'
        sh 'sudo make clean && sudo rm -rf /var/ossec/'
        sh 'sudo make --warn-undefined-variables V=1 TARGET=server install'
        sh 'sudo make clean'
    }
}

//Stage rule tests
def rule_tests(label){
    dir ('src') {
        sh 'sudo make V=1 TARGET=server test-rules'
        sh 'sudo make clean && sudo rm -rf /var/ossec/'
    }
}

//Stage advanced ossec compilation
def advanced_compilations(label){

    dir ('src') {
        sh 'sudo make --warn-undefined-variables V=1 TARGET=local install'
        sh 'sudo make clean && sudo rm -rf /var/ossec/'
        sh 'sudo make --warn-undefined-variables V=1 TARGET=hybrid install'
        sh 'sudo make clean && sudo rm -rf /var/ossec/'

        def matrixOptionsX = ['DATABASE=none', 'DATABASE=pgsql', 'DATABASE=mysql']
        def matrixOptionsY = ['USE_GEOIP=1', '']


        for (optionX in matrixOptionsX){
            for (optionY in matrixOptionsY) {
                sh 'sudo make --warn-undefined-variables V=1 TARGET=server '+optionX+' '+optionY+' install'
                sh 'sudo make clean && sudo rm -rf /var/ossec/'
            }
        }
    }
}

//Stage windows compilation
def windows_compilation(label){

    dir ('src') {
        sh 'sudo make --warn-undefined-variables TARGET=winagent'
        sh 'sudo make clean && sudo rm -rf /var/ossec/'
    }
}

for (x in platforms) {
    def platform = x
        
    stage (platform) {
     def versions = []
        if (platform == "ubuntu"){
            versions = platform_ubuntu
        }
        else if (platform == "debian"){
            versions = platform_debian
        }
        else (platform == "centos"){
            versions = platform_centos
        }
        
     
     
        stage ('Checkout SCM'){
            def builders = [:]
            for (y in versions) {
                def version = y // Need to bind the label variable before the closure - cant do for (label in labels)
            
                builders[version] = {
                    node(version) {
                       // check_source(version)
                     unit_tests(label)
                    }
                }
            }
            parallel builders
        }

     
        stage ('Unit Tests'){
            def builders = [:]
            for (y in versions) {
                def version = y // Need to bind the label variable before the closure - cant do for (label in labels)
            
                builders[version] = {
                    node(version) {
                        check_source(version)
                    }
                }
            }
            parallel builders
        }

        // stage...
    }
}
